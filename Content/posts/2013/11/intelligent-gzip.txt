{"MarkdownText":"GZIP compression is an essential part of making websites load faster. All the major web servers support GZIP, but they have some shortcomings regarding management and efficiency. For Primoca, I've created an optimal GZIP implementation that overcomes these issues and results in faster websites and lower bandwidth with zero configuration.\r\n\r\nHow GZIP works\r\n-------\r\nGZIP is controlled by HTTP headers. A client sends the `Accept-Encoding` header with its request to the server. If the header contains the token `gzip` the server can optionally make the response compressed and set the response header `Content-Encoding:  gzip` The decision to make the response compressed or uncompressed is left to the server's discretion. The server can send uncompressed content to a client that accepts GZIP but it should not send GZIPed content to a client that does not accept GZIP. The latter creates an unreadable response.\r\n\r\nProblems with the status quo\r\n------\r\nGZIP achieves its highest compression ratios on text files with lots of repetition therefore it is usually recommended to GZIP all HTML, CSS and JavaScript files. On the other hand image files like JPEG are already compressed so typically GZIP will not make them smaller (it can actually make them bigger in some cases). The conventional wisdom is don't GZIP images because it just wastes CPU on the server and client.\r\n\r\nFor these reasons the major web servers (NGINX, Apache, IIS) have configuration options that let you enable GZIP by file extension, MIME type or folder location. This approach has the following problems:\r\n\r\n+ If you want to compress a new file type you'll need to modify your configuration. This is tedious administrative overhead and may not even be possible on some shared web hosts.\r\n+ Configuration by MIME type/file extension is too broad. GZIP efficiency is dependent on the content of the file. It's possible to have a text file that doesn't compress much. Even more interesting is that **some images do get significantly smaller with GZIP**.  The JPEG below is 36.8KB uncompressed and 27.2KB compressed. That's a 26% change. Why not save 26% of your bandwidth?\r\n![Alt gzip](/content/img/gzip.jpg)\r\n\r\nSolution\r\n------\r\nThe ideal scenario is to GZIP only when there is a benefit to doing so. Since GZIP's benefit is dependent on the content of the file and not necessarily the file type the optimum solution is per file analysis. Primoca has a simple convention, when you upload a file we try to GZIP it. If the file gets at least 5% smaller we will serve the file compressed (of course only if the client accepts GZIP as discussed above). \r\n\r\n5% is a good threshold because at that point the reduced network latency should outweigh the time for the client to decode the file. This is all handled automatically regardless of file type and requires zero configuration by the customer.\r\n\r\nWhat about Amazon S3?\r\n-------------\r\nAmazon S3 can be used to host static websites but it too has some limitations when it comes to GZIP.  S3 doesn't have the ability to compress or decompress on the fly or vary content based on incoming headers. What you put into S3 is what you get out. \r\n\r\nYou can use GZIP with S3 by compressing the file before uploading it and setting the `Content-Encoding:  gzip` header on the object but this has two problems:\r\n\r\n+ You must pre-compress the content. This is an annoying step to add to a deployment workflow.\r\n+ It doesn't properly support clients that don't accept GZIP. Even though all the major web browsers support GZIP, proxy servers or other means can strip the headers thereby disabling GZIP. Other non-browser clients don't necessarily support compression either so the correct handling of headers is vital.\r\n\r\nPrimoca is committed to bringing you the easiest and highest performance web hosting experience on the planet. These GZIP improvements are just the first step in that commitment. ","Date":"2013-11-24T12:27:59","Tags":"Static_Websites, Performance","TagList":["Static_Websites","Performance"],"Title":"Intelligent GZIP","Author":"Alex Thompson","FullId":"2013/11/intelligent-gzip/","DateId":"2013/11/","TitleId":"intelligent-gzip"}